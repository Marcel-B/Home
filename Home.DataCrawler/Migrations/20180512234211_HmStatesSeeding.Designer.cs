// <auto-generated />
using System;
using Home.DataCrawler.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.EntityFrameworkCore.Migrations;

namespace Home.DataCrawler.Migrations
{
    [DbContext(typeof(ValueContext))]
    [Migration("20180512234211_HmStatesSeeding")]
    partial class HmStatesSeeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-preview2-30571");

            modelBuilder.Entity("Home.Domain.Entities.HomeMaticState", b =>
                {
                    b.Property<Guid>("Pk")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset?>("LastEdit");

                    b.Property<string>("Name");

                    b.Property<bool>("State");

                    b.HasKey("Pk");

                    b.ToTable("HomeMaticStates");

                    b.HasData(
                        new { Pk = new Guid("ac0d8cd0-7106-41e5-ab06-f087f41b5b96"), LastEdit = new DateTimeOffset(new DateTime(2018, 5, 13, 1, 42, 11, 674, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)), Name = "SteckdoseTv", State = false },
                        new { Pk = new Guid("b4d133d9-5074-4d69-b7b5-28814fbf4d1c"), LastEdit = new DateTimeOffset(new DateTime(2018, 5, 13, 1, 42, 11, 678, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)), Name = "Alarmanlage", State = false },
                        new { Pk = new Guid("1f27d435-c462-4f15-9c1b-f4542d4541bd"), LastEdit = new DateTimeOffset(new DateTime(2018, 5, 13, 1, 42, 11, 678, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)), Name = "Fenster Bad hinten", State = false }
                    );
                });

            modelBuilder.Entity("Home.Domain.Entities.MeasurePoint", b =>
                {
                    b.Property<string>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ChannelId");

                    b.Property<DateTimeOffset?>("Create");

                    b.Property<string>("PointName");

                    b.Property<double>("PointValue");

                    b.HasKey("Guid");

                    b.ToTable("MeasurePoints");
                });

            modelBuilder.Entity("Home.Domain.Entities.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset?>("Created");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Values");
                });
#pragma warning restore 612, 618
        }
    }
}
